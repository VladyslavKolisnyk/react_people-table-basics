{"version":3,"sources":["App.tsx","components/Loader/pages/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","api.ts","store/peopleContext.tsx","components/Loader/pages/PeoplePage.tsx","components/Loader/pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","PersonLink","person","name","slug","sex","PeopleTable","people","slugId","useParams","getParentLink","parent","find","par","map","born","died","fatherName","motherName","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","loading","loadingError","UsersProvider","children","useState","setPeople","setLoading","setLoadingError","useEffect","catch","finally","Provider","value","PeoplePage","useContext","length","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fca78014.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <Outlet />\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <NavLink\n      to={slug}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slugId } = useParams();\n\n  const getParentLink = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parent = people.find(par => par.name === name);\n\n    if (parent) {\n      return (\n        <PersonLink\n          person={parent}\n        />\n      );\n    }\n\n    return name;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.name}\n              className={classNames({\n                'has-background-warning': person.slug === slugId,\n              })}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{getParentLink(motherName)}</td>\n              <td>{getParentLink(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeopleContext = React.createContext({\n  people: [] as Person[],\n  loading: false,\n  loadingError: false,\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const UsersProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setLoadingError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <PeopleContext.Provider value={{ people, loading, loadingError }}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n\nexport function usePeople() {\n  const people = useContext(PeopleContext);\n\n  return people;\n}\n","import { PeopleTable } from '../../PopleTable/PeopleTable';\nimport { Loader } from '../Loader';\nimport { usePeople } from '../../../store/peopleContext';\n\nexport const PeoplePage = () => {\n  const { people, loading, loadingError } = usePeople();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (\n            <Loader />\n          )}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !loadingError && !loading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/Loader/pages/HomePage';\nimport { PeoplePage } from './components/Loader/pages/PeoplePage';\nimport { NotFoundPage } from './components/Loader/pages/NotFoundPage';\nimport { UsersProvider } from './store/peopleContext';\n\nexport const Root = () => (\n  <Router>\n    <UsersProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route\n            path=\"people\"\n            element={<PeoplePage />}\n          >\n            <Route path=\":slugId\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </UsersProvider>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}